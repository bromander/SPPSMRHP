import asyncio
import logging
import time
from aiogram import Bot, Dispatcher, types, Router
from aiogram.filters import Command
from aiogram.types import Message
from skripts import additionals, admin_commands
from skripts.additionals import Work_with_json as wwjson, Yandex_music_parse as Yparse


my_admins_router = Router(name=__name__)



@my_admins_router.message(Command("clear_usersdata"))
async def clear_usersdata(message: Message) -> None:
    if wwjson.is_user_admin(str(message.from_user.id), ['super_admin']):
        usersdata = wwjson.get_json_data("jsons/Human_souls.json")
        for i in usersdata:
            usersdata[str(i)]["suggested_music"] = {}
            usersdata[str(i)]["class"] = 0
        wwjson.send_json_data(usersdata, "jsons/Human_souls.json")
        for i in wwjson.get_admins_list():
            await message.bot.send_message(i, f"üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –æ—Ç—á–∏—Å—Ç–∏–ª –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∏ –∏ –∫–ª–∞—Å—Å—ã)!")
        logging.warning(f"üóëÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –æ—Ç—á–∏—Å—Ç–∏–ª –¥–∞–Ω–Ω—ã–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π(–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç—Ä–µ–∫–∏ –∏ –∫–ª–∞—Å—Å—ã)!")
    else:
        await message.answer("–¢—ã –∫–∞–∫ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —É–∑–Ω–∞–ª?\n–°–æ—Ä–∏, –Ω–æ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ")



@my_admins_router.message(Command("add_admin"))
async def add_admin(message: Message) -> None:
    if wwjson.is_user_admin(str(message.from_user.id), ['super_admin']):
        user = message.text.split(' ')
        if len(user) != 2:
            await message.answer('–û—à–∏–±–∫–∞, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            return None
        else:
            try:
                user = int(user[1])
            except ValueError:
                await message.answer('–û—à–∏–±–∫–∞, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å, –ø–µ—Ä–µ—Å–ª–∞–≤ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @userinfobot')
                return None
        if wwjson.is_user_admin(str(user), ['super_admin', 'admin']):
            await message.answer('–û—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!')
            return None
        user_username = wwjson.get_json_data("jsons/Human_souls.json")[str(user)]["soul_name"]
        usersdata = wwjson.get_json_data("jsons/Human_souls.json")
        for i in wwjson.get_admins_list():
            await message.bot.send_message(int(i), text=f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @{user_username}!')
        usersdata[str(user)]["usertype"] = "admin"
        wwjson.send_json_data(usersdata, "jsons/Human_souls.json")
        logging.warning(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @{user_username}!')
    else:
        await message.answer("–¢—ã –∫–∞–∫ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —É–∑–Ω–∞–ª?\n–°–æ—Ä–∏, –Ω–æ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ")


@my_admins_router.message(Command("del_admin"))
async def del_admin(message: Message) -> None:
    if wwjson.is_user_admin(str(message.from_user.id), ['super_admin']):
        user = message.text.split(' ')
        if len(user) != 2:
            await message.answer('–û—à–∏–±–∫–∞, –≤—ã –Ω–µ –≤–≤–µ–ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!')
            return None
        else:
            try:
                user = int(user[1])
            except ValueError:
                await message.answer('–û—à–∏–±–∫–∞, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\nId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å, –ø–µ—Ä–µ—Å–ª–∞–≤ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ @userinfobot')
                return None
        if wwjson.is_user_admin(str(user), ['default']):
            await message.answer('–û—à–∏–±–∫–∞, –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!')
            return None
        user_username = wwjson.get_json_data("jsons/Human_souls.json")[str(user)]["soul_name"]
        usersdata = wwjson.get_json_data("jsons/Human_souls.json")
        for i in wwjson.get_admins_list():
            await message.bot.send_message(int(i), text=f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} —É–¥–∞–ª–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @{user_username} –∏–∑ —Å–æ—Å—Ç–∞–≤–∞!')
        usersdata[str(user)]["usertype"] = "default"
        wwjson.send_json_data(usersdata, "jsons/Human_souls.json")
        logging.warning(f'‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.from_user.username} —É–¥–∞–ª–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ @{user_username} –∏–∑ —Å–æ—Å—Ç–∞–≤–∞!')
    else:
        await message.answer("–¢—ã –∫–∞–∫ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —É–∑–Ω–∞–ª?\n–°–æ—Ä–∏, –Ω–æ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ")




@my_admins_router.message(Command("get_all_users"))
async def get_all_users(message: Message) -> None:
    if wwjson.is_user_admin(str(message.from_user.id)):
        usersdata = wwjson.get_json_data("jsons/Human_souls.json")
        usersdata = dict(sorted(usersdata.items(), key=lambda item: item[1]["class"]))

        for i in usersdata:
            userdata = usersdata[i]

            if int(userdata["last_mus"]) == 0:
                user_last_activity = '–ù–ò–ö–û–ì–î–ê'
            else:
                user_last_activity = time.ctime(int(userdata["last_mus"]))

            await message.answer(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{userdata["soul_name"]}'
                                 f'\nID: <i>{i}</i>'
                                 f'\n–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: <i>{userdata["usertype"]}</i>'
                                 f'\n–ö–æ–ª-–≤–æ  –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤: <i>{len(userdata["suggested_music"])}</i>'
                                 f'\n–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: <i>{user_last_activity}</i>'
                                 f'\n–ö–ª–∞—Å—Å: <i>{userdata["class"]}</i>')
    else:
        await message.answer("–¢—ã –∫–∞–∫ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —É–∑–Ω–∞–ª?\n–°–æ—Ä–∏, –Ω–æ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ")


@my_admins_router.message(Command("set_recruiting"))
async def set_recruiting(message: Message) -> None:
    if wwjson.is_user_admin(str(message.from_user.id), ['super_admin']):
        data = wwjson.get_json_data('./jsons/data.json')
        if data["recruiting"]:
            data["recruiting"] = False
            for i in wwjson.get_admins_list():
                await message.bot.send_message(chat_id=i, text="üîí –ù–∞–±–æ—Ä —Ç—Ä–µ–∫–æ–≤ –±—ã–ª –∑–∞–∫—Ä—ã—Ç!")
            logging.warning(f"üîí –ù–∞–±–æ—Ä —Ç—Ä–µ–∫–æ–≤ –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.username}!")
        else:
            data["recruiting"] = True
            for i in wwjson.get_admins_list():
                await message.bot.send_message(chat_id=i, text="üîì –ù–∞–±–æ—Ä —Ç—Ä–µ–∫–æ–≤ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç!")
            logging.warning(f"üîì –ù–∞–±–æ—Ä —Ç—Ä–µ–∫–æ–≤ –±—ã–ª –æ—Ç–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.username}!")
        wwjson.send_json_data(data, './jsons/data.json')
    else:
        await message.answer("–¢—ã –∫–∞–∫ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É —É–∑–Ω–∞–ª?\n–°–æ—Ä–∏, –Ω–æ —É —Ç–µ–±—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ")